name: Terraform Apply Multi-Environment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  # Job 1: Plan and Apply in desarrollo environment
  terraform-desarrollo:
    name: Terraform - Desarrollo
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.base_ref == 'main')

    environment:
      name: desarrollo

    outputs:
      plan-exitcode: ${{ steps.plan.outputs.exitcode }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Azure Login
      uses: ./.github/actions/azure-login

    - name: Setup Terraform Backend and Init
      uses: ./.github/actions/terraform-backend-init
      with:
        backend_tfvars: ${{ vars.BACKEND_TFVARS }}

    - name: Create or Select Terraform Workspace - Desarrollo
      run: |
        terraform workspace select desarrollo || terraform workspace new desarrollo

    - name: Terraform Plan - Desarrollo
      id: plan
      run: |
        terraform plan -detailed-exitcode -out=tfplan-desarrollo
      continue-on-error: true

    - name: Comment PR with Plan Results
      if: github.event_name == 'pull_request'
      uses: borchero/terraform-plan-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        planfile: tfplan-desarrollo

    - name: Terraform Apply - Desarrollo
      if: |
        steps.plan.outputs.exitcode == 2 && (
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        )
      run: terraform apply -auto-approve tfplan-desarrollo

  # Job 2: Plan in produccion environment (runs after desarrollo success)
  terraform-produccion-plan:
    name: Terraform Plan - Produccion
    runs-on: ubuntu-latest
    needs: terraform-desarrollo
    if: |
      always() &&
      needs.terraform-desarrollo.result == 'success' &&
      (
        (github.event_name == 'push' && github.ref == 'refs/heads/main')
      )

    outputs:
      plan-exitcode: ${{ steps.plan.outputs.exitcode }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Azure Login
      uses: ./.github/actions/azure-login

    - name: Setup Terraform Backend and Init
      uses: ./.github/actions/terraform-backend-init
      with:
        backend_tfvars: ${{ vars.BACKEND_TFVARS }}

    - name: Create or Select Terraform Workspace - Produccion
      run: |
        terraform workspace select produccion || terraform workspace new produccion

    - name: Terraform Plan - Produccion
      id: plan
      run: |
        terraform plan -detailed-exitcode -out=tfplan-produccion
      continue-on-error: true

    - name: Upload Terraform Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfplan-produccion
        path: tfplan-produccion
        retention-days: 30

  # Job 3: Apply in produccion environment (manual approval required)
  terraform-produccion-apply:
    name: Terraform Apply - Produccion
    runs-on: ubuntu-latest
    needs: [terraform-desarrollo, terraform-produccion-plan]
    if: |
      always() &&
      needs.terraform-desarrollo.result == 'success' &&
      needs.terraform-produccion-plan.result == 'success' &&
      needs.terraform-produccion-plan.outputs.plan-exitcode == '2' &&
      (
        (github.event_name == 'push' && github.ref == 'refs/heads/main')
      )

    environment:
      name: produccion

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Azure Login
      uses: ./.github/actions/azure-login

    - name: Setup Terraform Backend and Init
      uses: ./.github/actions/terraform-backend-init
      with:
        backend_tfvars: ${{ vars.BACKEND_TFVARS }}

    - name: Create or Select Terraform Workspace - Produccion
      run: |
        terraform workspace select produccion || terraform workspace new produccion

    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan-produccion

    - name: Terraform Apply - Produccion
      run: terraform apply -auto-approve tfplan-produccion
